# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Publish wheel

on:
  push:
    branches: [main]        # <-- build on every commit to main
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch or tag to publish (manual run)"
        required: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-latest, arch: x86_64}
          - {os: ubuntu-24.04-arm, arch: aarch64}

    steps:
      - uses: astral-sh/setup-uv@v4

      - uses: actions/checkout@v4
        with:
          # Use the input only for manual runs; otherwise use the triggering ref
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.branch || github.ref }}
          submodules: recursive

      - uses: ./.github/actions/detect-env-vars
        id: env_vars

      - name: Print current commit
        run: git log -1 --oneline

      - name: Run cpp tests
        if: ${{ matrix.os != 'windows-latest' }}
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: ${{ steps.env_vars.outputs.cpu_count }}
        run: |
          cmake . -B build_test -DTVM_FFI_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build build_test --clean-first --config Debug --target tvm_ffi_tests
          ctest -V -C Debug --test-dir build_test --output-on-failure

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
          CIBW_BUILD_VERBOSITY: 1
          CMAKE_BUILD_PARALLEL_LEVEL: ${{ steps.env_vars.outputs.cpu_count }}

        with:
          package-dir: .
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.arch }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl


  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
      attestations: write
    if: github.event_name == 'workflow_dispatch'   # <-- publish only on manual trigger
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Generate artifact attestation for sdist and wheels
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/*

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
          verbose: true
          # testing publish url
          # repository-url: https://test.pypi.org/legacy/
